[{"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\index.js":"1","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\reportWebVitals.js":"2","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\App.js":"3","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\index.js":"4","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\pages\\Index.jsx":"5","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\map.js":"6","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\location.js":"7","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\restaurantModal.js":"8","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\Body.jsx":"9","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\Footer.jsx":"10","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\Header.jsx":"11","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\RestaurantReviewModal.jsx":"12","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\ListPage.jsx":"13","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\RestaurantModal.jsx":"14","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\ImageComponent.jsx":"15","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\RegionListModal.jsx":"16","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\ReviewScope.jsx":"17","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\RestaurantModalAPI.js":"18","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\ListRandom.js":"19","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\Review.js":"20","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\map\\CreateMap.jsx":"21","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\MapRamdom.js":"22","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\CenterRestaurant.js":"23","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\SearchRestaurantAPI.js":"24","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\urlChange.js":"25"},{"size":857,"mtime":1676285477870,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1676100520739,"results":"28","hashOfConfig":"27"},{"size":596,"mtime":1676100520719,"results":"29","hashOfConfig":"27"},{"size":324,"mtime":1676285477871,"results":"30","hashOfConfig":"27"},{"size":3160,"mtime":1676285477873,"results":"31","hashOfConfig":"27"},{"size":1713,"mtime":1676100520736,"results":"32","hashOfConfig":"27"},{"size":582,"mtime":1676100520736,"results":"33","hashOfConfig":"27"},{"size":581,"mtime":1676100520737,"results":"34","hashOfConfig":"27"},{"size":992,"mtime":1676285477856,"results":"35","hashOfConfig":"27"},{"size":1751,"mtime":1676285477857,"results":"36","hashOfConfig":"27"},{"size":5092,"mtime":1676285477859,"results":"37","hashOfConfig":"27"},{"size":4950,"mtime":1676285477865,"results":"38","hashOfConfig":"27"},{"size":6320,"mtime":1676304967133,"results":"39","hashOfConfig":"27"},{"size":9331,"mtime":1676285477864,"results":"40","hashOfConfig":"27"},{"size":466,"mtime":1676100520725,"results":"41","hashOfConfig":"27"},{"size":4525,"mtime":1676285477862,"results":"42","hashOfConfig":"27"},{"size":1636,"mtime":1676285477866,"results":"43","hashOfConfig":"27"},{"size":406,"mtime":1676285477852,"results":"44","hashOfConfig":"27"},{"size":425,"mtime":1676285477850,"results":"45","hashOfConfig":"27"},{"size":475,"mtime":1676285477854,"results":"46","hashOfConfig":"27"},{"size":15026,"mtime":1676318339852,"results":"47","hashOfConfig":"27"},{"size":395,"mtime":1676285477851,"results":"48","hashOfConfig":"27"},{"size":456,"mtime":1676285477850,"results":"49","hashOfConfig":"27"},{"size":713,"mtime":1676285477855,"results":"50","hashOfConfig":"27"},{"size":397,"mtime":1676285477872,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eg0wa0",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\index.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\App.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\index.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\pages\\Index.jsx",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\map.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\location.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\restaurantModal.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\Body.jsx",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\Footer.jsx",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\Header.jsx",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\RestaurantReviewModal.jsx",["133"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ImgComponent from \"./ImageComponent\";\r\nimport ReviewScope from \"./ReviewScope\";\r\n\r\nimport { ReviewAPI } from \"../api/Review\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst RestaurantReviewModal = ({ closeAllReview }) => {\r\n  return (\r\n    <RestaurantReviewModalWrap>\r\n      <CloseWrap>\r\n        <Close onClick={closeAllReview}>\r\n          <ImgComponent src={\"close.png\"} width={\"100%\"} />\r\n        </Close>\r\n      </CloseWrap>\r\n      <Box>\r\n        <ReviewList />\r\n      </Box>\r\n    </RestaurantReviewModalWrap>\r\n  );\r\n};\r\n\r\nconst RestaurantReviewModalWrap = styled.div`\r\n  height: 85%;\r\n  width: 100%;\r\n  z-index: 30;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  border: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  padding: 40px 22px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  @media screen and (max-width: 1000px) {\r\n    padding-top: 20px;\r\n  }\r\n`;\r\nconst Box = styled.div`\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  height: 100%;\r\n  padding-bottom: 50px;\r\n  box-sizing: border-box;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\nconst CloseWrap = styled.div`\r\n  &::after {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n`;\r\nconst Close = styled.div`\r\n  width: 17px;\r\n  height: 17px;\r\n  margin-bottom: 30px;\r\n  float: right;\r\n  margin-right: 1%;\r\n  @media screen and (max-width: 1000px) {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin-right: 0;\r\n    padding-right: 0;\r\n  }\r\n`;\r\n\r\nexport default RestaurantReviewModal;\r\n\r\n// 매장 상세 리뷰\r\nconst ReviewList = () => {\r\n  return (\r\n    <ReviewListWrap>\r\n      <ReviewComponent />\r\n    </ReviewListWrap>\r\n  );\r\n};\r\n\r\nconst ReviewListWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\n// 매장 상세 리뷰 한 개 컴포넌트\r\nconst ReviewComponent = () => {\r\n  const restaurantID = useSelector((state) => state.restaurantModal.id);\r\n  const [reviewData, setReviewData] = useState(null);\r\n  const [pageNum, setPageNum] = useState(10);\r\n  const showURL = useSelector((state) => state.urlChange.name);\r\n\r\n  //무한 스크롤 : 라이브러리 react-intersection-observer\r\n  const [ref, inView] = useInView();\r\n  useEffect(() => {\r\n    setPageNum(pageNum + 10);\r\n  }, [ref, inView]);\r\n\r\n  useEffect(() => {\r\n    ReviewAPI(\r\n      (data) => {\r\n        setReviewData(data);\r\n      },\r\n      restaurantID,\r\n      pageNum,\r\n      showURL\r\n    );\r\n    //주의 : console.log(reviewData) 이렇게 해도 reviewData 는 null 로 나온다. useEffect 밖에서 console 해줘야 한다.\r\n  }, [restaurantID, pageNum, showURL]);\r\n\r\n  if (reviewData === null) {\r\n    return <ReviewBox>리뷰 없음</ReviewBox>;\r\n  }\r\n\r\n  return (\r\n    <ReviewListWrap>\r\n      {reviewData.map((review) => (\r\n        <ReviewBox key={review.id}>\r\n          <Top>\r\n            <Feeling>{review.content}</Feeling>\r\n            <Date>{review.createAT}</Date>\r\n          </Top>\r\n          <Middle>\r\n            <ReviewScopeNum>{review.rating}</ReviewScopeNum>\r\n            <ReviewScope scope={review.rating} />\r\n          </Middle>\r\n          <Bottom>{review.content}</Bottom>\r\n        </ReviewBox>\r\n      ))}\r\n      <div ref={ref} style={{ height: \"100px\", width: \"100px\" }}></div>\r\n    </ReviewListWrap>\r\n  );\r\n};\r\n\r\nconst ReviewBox = styled.div`\r\n  border: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  width: 49%;\r\n  margin-bottom: 2%;\r\n  padding: 25px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 1000px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n// 매장명 & 주소\r\nconst Top = styled.div`\r\n  margin-bottom: 20px;\r\n  /* display: flex;\r\n  align-items: baseline; */\r\n  @media screen and (max-width: 1000px) {\r\n    margin-bottom: 6px;\r\n    flex-direction: column;\r\n    display: flex;\r\n  }\r\n`;\r\nconst Feeling = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n  margin-right: 10px;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 14px;\r\n    margin: 0;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\nconst Date = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  color: #999999;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 11px;\r\n    width: 100%;\r\n  }\r\n`;\r\n// 별점 & 아이콘\r\nconst Middle = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst ReviewScopeNum = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n  margin-right: 6px;\r\n`;\r\n// 리뷰\r\nconst Bottom = styled.p`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #999999;\r\n  margin: 0;\r\n  @media screen and (max-width: 1000px) {\r\n    margin: 0;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\ListPage.jsx",["134","135","136","137","138"],[],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { change } from \"../modules/restaurantModal\";\r\nimport ReviewScope from \"./ReviewScope\";\r\n\r\nimport { ListRandom } from \"../api/ListRandom\";\r\nimport { SearchRestaurantAPI } from \"../api/SearchRestaurantAPI\";\r\n\r\nconst ListPage = ({ detailModalOpen }) => {\r\n  return (\r\n    <ListPageWrap>\r\n      <ListScroll id=\"scrollWrap\">{ListContent(detailModalOpen)}</ListScroll>\r\n    </ListPageWrap>\r\n  );\r\n};\r\n\r\nconst ListPageWrap = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  margin-top: 60px;\r\n  flex: 1;\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  box-sizing: border-box;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 1000px) {\r\n    margin-top: 20px;\r\n    height: 100%;\r\n  }\r\n`;\r\nconst ListScroll = styled.div`\r\n  @media screen and (max-width: 1000px) {\r\n    display: block;\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    height: 100%;\r\n    -ms-overflow-style: none;\r\n    scrollbar-width: none;\r\n    box-sizing: border-box;\r\n    &::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\nconst FlexWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n`;\r\nexport default ListPage;\r\n\r\n// =============================================\r\n\r\nfunction ListContent(detailModalOpen) {\r\n  // 무한스크롤\r\n  const [pageNum, setPageNum] = useState(0);\r\n  const [ref, inView] = useInView();\r\n  useEffect(() => {\r\n    if (!inView) return;\r\n    setPageNum(pageNum + 10);\r\n  }, [ref, inView]);\r\n\r\n  //전체 음식점 저장\r\n  const [restaurantData, setRestaurantData] = useState([]);\r\n  const showURL = useSelector((state) => state.urlChange.name);\r\n\r\n  useEffect(() => {\r\n    if (bigLocation !== \"\") return;\r\n    if (pageNum === 0) return;\r\n\r\n    ListRandom(\r\n      (data) => {\r\n        setRestaurantData(data);\r\n      },\r\n      pageNum,\r\n      showURL\r\n    );\r\n  }, [pageNum, showURL]);\r\n\r\n  //가게 클릭 시 해당 가게로 이름 변경 -> 모달창 이동\r\n  const dispatch = useDispatch();\r\n  const onClickSelect = useCallback((id) => dispatch(change(id)), [dispatch]);\r\n\r\n  //modules/location.js 에 저장된 지역의 음식 리스트만 보여주기\r\n  const [bigLocation, setBigLocation] = useState(\r\n    useSelector((state) => state.location.bigLocation)\r\n  );\r\n  const [smallLocation, setSmallLocation] = useState(\r\n    useSelector((state) => state.location.smallLocation)\r\n  );\r\n\r\n  //지역 검색시, 해당 지역의 음식점만 조회\r\n  useEffect(() => {\r\n    if (smallLocation === \"\") return;\r\n    if (pageNum === 0) return;\r\n\r\n    SearchRestaurantAPI(\r\n      bigLocation,\r\n      smallLocation,\r\n      (data) => {\r\n        setRestaurantData(data);\r\n      },\r\n      pageNum,\r\n      showURL\r\n    );\r\n  }, [smallLocation, pageNum, showURL]);\r\n\r\n  if (restaurantData === []) return;\r\n\r\n  return (\r\n    <FlexWrap>\r\n      {restaurantData.map((restaurant) => (\r\n        <ListContentWrap\r\n          key={restaurant.id}\r\n          onClick={() => {\r\n            onClickSelect(restaurant.id);\r\n            detailModalOpen();\r\n          }}\r\n        >\r\n          <ImgBox>\r\n            <ImgWrap imgUrl={restaurant.thumbnail}></ImgWrap>\r\n          </ImgBox>\r\n          <AboutWrap>\r\n            <Top>\r\n              <Title>{restaurant.name}</Title>\r\n              <Address>{restaurant.numberAddress}</Address>\r\n            </Top>\r\n            <Middle>\r\n              <Scope>{restaurant.review_rating}</Scope>\r\n              <ReviewScope scope={restaurant.review_rating} />\r\n            </Middle>\r\n            <Bottom>리뷰 {restaurant.review_number}</Bottom>\r\n          </AboutWrap>\r\n        </ListContentWrap>\r\n      ))}\r\n      <div ref={ref} style={{ height: \"100px\", width: \"100px\" }}></div>\r\n    </FlexWrap>\r\n  );\r\n}\r\n\r\nconst ListContentWrap = styled.div`\r\n  background: #ffffff;\r\n  border: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  width: 49%;\r\n  margin-bottom: 2%;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: 1000px) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n// 왼쪽 이미지\r\nconst ImgBox = styled.div`\r\n  width: 40%;\r\n  background-color: #c09567;\r\n  border-radius: 10px;\r\n  margin-right: 25px;\r\n  overflow: hidden;\r\n  @media screen and (max-width: 1000px) {\r\n    width: 100%;\r\n    margin: 0;\r\n  }\r\n`\r\nconst ImgWrap = styled.div`\r\n  height: 100px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: url(${(props) => props.imgUrl}) no-repeat center;\r\n  background-size: cover;\r\n`\r\n// 오른쪽 설명\r\nconst AboutWrap = styled.div`\r\n  width: 50%;\r\n  @media screen and (max-width: 1000px) {\r\n    flex: 0;\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n`\r\n// 매장명 & 주소\r\nconst Top = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: baseline;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-bottom: 6px;\r\n    flex-direction: column;\r\n  }\r\n`\r\nconst Title = styled.span`\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  color: #000000;\r\n  margin-right: 10px;\r\n  width: 100%;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 14px;\r\n    margin-bottom: 4px;\r\n  }\r\n`\r\nconst Address = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  color: #999999;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 11px;\r\n    width: 100%;\r\n  }\r\n`\r\n// 별점 & 아이콘\r\nconst Middle = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-bottom: 6px;\r\n  }\r\n`\r\nconst Scope = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n  margin-right: 6px;\r\n`\r\n\r\n// 리뷰 개수\r\nconst Bottom = styled.p`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #999999;\r\n  @media screen and (max-width: 1000px) {\r\n    margin: 0;\r\n    font-size: 11px;\r\n  }\r\n`\r\n","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\RestaurantModal.jsx",["139"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ImgComponent from \"./ImageComponent\";\r\nimport ReviewScope from \"./ReviewScope\";\r\n\r\nimport { RestaurantModalAPI } from \"../api/RestaurantModalAPI\";\r\nimport ReviewAPI from \"../api/Review\";\r\n\r\nconst RestaurantModal = (props) => {\r\n  const [listData, setListData] = useState([]);\r\n  const selectRestaurantId = useSelector((state) => state.restaurantModal.id);\r\n  const showURL = useSelector((state) => state.urlChange.name);\r\n\r\n  useEffect(() => {\r\n    RestaurantModalAPI(\r\n      (data) => {\r\n        setListData(data);\r\n      },\r\n      selectRestaurantId,\r\n      showURL\r\n    );\r\n  }, [selectRestaurantId, showURL]);\r\n\r\n  if (listData === null) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <RestaurantModalWrap>\r\n      <CloseWrap>\r\n        <Close onClick={props.detailModalClose}>\r\n          <ImgComponent src={\"close.png\"} width={\"100%\"} />\r\n        </Close>\r\n      </CloseWrap>\r\n      <Box>\r\n        <div key={listData.id}>\r\n          <MainImg>\r\n            <Thumbnail src={listData.thumbnail} width={\"100%\"} />\r\n          </MainImg>\r\n          <About>\r\n            <Title>{listData.name}</Title>\r\n            <Address>{listData.numberAddress}</Address>\r\n            <ScopeWrap>\r\n              <Scope>{listData.review_rating}</Scope>\r\n              <ReviewScope scope={listData.review_rating} />\r\n            </ScopeWrap>\r\n          </About>\r\n          <Info>\r\n            <InfoComponent img={\"time.png\"} txt={listData.time} />\r\n            <InfoComponent img={\"link.png\"} txt={listData.link} />\r\n            <InfoComponent img={\"phone.png\"} txt={listData.number} />\r\n          </Info>\r\n        </div>\r\n        <Divider></Divider>\r\n        <ReviewWrap onClick={props.openAllReivew}>\r\n          <ReviewTxtWrap>\r\n            <ReviewNum>리뷰 {listData.review_number}개</ReviewNum>\r\n            <ReviewMore onClick={props.onClick}>더보기</ReviewMore>\r\n          </ReviewTxtWrap>\r\n          <ReviewList />\r\n        </ReviewWrap>\r\n      </Box>\r\n    </RestaurantModalWrap>\r\n  );\r\n};\r\n\r\nconst RestaurantModalWrap = styled.div`\r\n  height: 85%;\r\n  width: 100%;\r\n  z-index: 20;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  border: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  padding: 40px 22px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  @media screen and (max-width: 1000px) {\r\n    padding-top: 20px;\r\n  }\r\n`;\r\n\r\nconst Thumbnail = styled.img``;\r\n\r\nconst Box = styled.div`\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  height: 100%;\r\n  padding-bottom: 50px;\r\n  box-sizing: border-box;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\nconst CloseWrap = styled.div`\r\n  &::after {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n`;\r\nconst Close = styled.div`\r\n  width: 17px;\r\n  height: 17px;\r\n  margin-bottom: 30px;\r\n  float: right;\r\n  margin-right: 1%;\r\n  @media screen and (max-width: 1000px) {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin-right: 0;\r\n    padding-right: 0;\r\n  }\r\n`;\r\n\r\nconst MainImg = styled.div`\r\n  background-color: #c09567;\r\n  border-radius: 10px;\r\n  width: 80%;\r\n  margin: auto;\r\n  height: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 1000px) {\r\n    height: 140px;\r\n    width: 90%;\r\n  }\r\n`;\r\nconst About = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\nconst Title = styled.p`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n  margin: 0;\r\n`;\r\nconst Address = styled.p`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  color: #999999;\r\n`;\r\nconst ScopeWrap = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Scope = styled.p`\r\n  margin: 0;\r\n  margin-right: 20px;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n`;\r\n//=============\r\nconst Info = styled.div`\r\n  margin-left: 20px;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n// ============\r\nconst Divider = styled.div`\r\n  border: 0;\r\n  margin-bottom: 30px;\r\n  margin-top: 30px;\r\n  height: 0.5px;\r\n  background-color: #c09567;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-bottom: 20px;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n// =============\r\n\r\nconst ReviewWrap = styled.div`\r\n  width: 100%;\r\n`;\r\nconst ReviewFlexWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\nconst ReviewTxtWrap = styled.div`\r\n  margin-left: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  margin-left: 20px;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-left: 0;\r\n  }\r\n`;\r\nconst ReviewNum = styled.p`\r\n  margin: 0;\r\n  margin-right: 10px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #999999;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\nconst ReviewMore = styled.p`\r\n  margin: 0;\r\n  background: #c09567;\r\n  border: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 12px;\r\n    padding: 8px;\r\n  }\r\n`;\r\nexport default RestaurantModal;\r\n\r\n// 매장 상세 중간 정보 컴포넌트 ( 영업 시간, 링크, 번호 )\r\n\r\nconst InfoComponent = (props) => {\r\n  return (\r\n    <InfoWrap>\r\n      <InfoIcon>\r\n        <ImgComponent src={props.img} width={\"100%\"} />\r\n      </InfoIcon>\r\n      <InfoTxt>{props.txt}</InfoTxt>\r\n    </InfoWrap>\r\n  );\r\n};\r\n\r\nconst InfoWrap = styled.div`\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nconst InfoIcon = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  margin-right: 10px;\r\n`;\r\nconst InfoTxt = styled.div`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #999999;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\n// 매장 상세 리뷰\r\n\r\nfunction ReviewList() {\r\n  const [pageNum, setPageNum] = useState(0);\r\n  const [reviewData, setReviewData] = useState(null);\r\n\r\n  //무한 스크롤 : 라이브러리 react-intersection-observer\r\n  const [ref, inView] = useInView();\r\n  useEffect(() => {\r\n    if (!inView) return;\r\n    setPageNum(pageNum + 10);\r\n  }, [ref, inView]);\r\n\r\n  const restaurantID = useSelector((state) => state.restaurantModal.id);\r\n  const showURL = useSelector((state) => state.urlChange.name);\r\n\r\n  useEffect(() => {\r\n    if (pageNum === 0) return;\r\n    if (restaurantID === \"\") return;\r\n    ReviewAPI(\r\n      (data) => {\r\n        setReviewData(data);\r\n      },\r\n      restaurantID,\r\n      pageNum,\r\n      showURL\r\n    );\r\n  }, [restaurantID, pageNum, showURL]);\r\n\r\n  if (reviewData === null) {\r\n    return (\r\n      <>\r\n        <ReviewBox>리뷰 없음</ReviewBox>\r\n        <div ref={ref} style={{ height: \"100px\", width: \"100px\" }}></div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // 매장 상세 리뷰 한 개 컴포넌트\r\n  return (\r\n    <ReviewFlexWrap>\r\n      {reviewData.map((review) => (\r\n        <ReviewBox key={review.id}>\r\n          <Top>\r\n            <Feeling>{review.content}</Feeling>\r\n            <Date>{review.createAT}</Date>\r\n          </Top>\r\n          <Middle>\r\n            <ReviewScopeNum>{review.rating}</ReviewScopeNum>\r\n            <ReviewScope scope={review.rating} />\r\n          </Middle>\r\n          <Bottom>{review.content}</Bottom>\r\n        </ReviewBox>\r\n      ))}\r\n      <div ref={ref} style={{ height: \"100px\", width: \"100px\" }}></div>\r\n    </ReviewFlexWrap>\r\n  );\r\n}\r\n\r\nconst ReviewBox = styled.div`\r\n  border: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  width: 49%;\r\n  margin-bottom: 2%;\r\n  padding: 25px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 1000px) {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\n// 매장명 & 주소\r\nconst Top = styled.div`\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 1000px) {\r\n    margin-bottom: 6px;\r\n    flex-direction: column;\r\n    display: flex;\r\n  }\r\n`;\r\nconst Feeling = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n  margin-right: 10px;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 14px;\r\n    margin: 0;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\nconst Date = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  color: #999999;\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 11px;\r\n    width: 100%;\r\n  }\r\n`;\r\n// 별점 & 아이콘\r\nconst Middle = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst ReviewScopeNum = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  color: #000000;\r\n  margin-right: 6px;\r\n`;\r\n// 리뷰\r\nconst Bottom = styled.p`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #999999;\r\n  margin: 0;\r\n  @media screen and (max-width: 1000px) {\r\n    margin: 0;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\ImageComponent.jsx",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\RegionListModal.jsx",["140","141"],[],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport dummy from \"./../db/location.json\";\r\nimport styled from \"styled-components\";\r\nimport ImgComponent from \"./ImageComponent\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveLocation } from \"../modules/location\";\r\n\r\n// =========== RegionListModal 지역 선택 모달\r\n//수정-보민 : map, json DB, Redux (setCity)\r\n\r\nconst RegionListModal = (props) => {\r\n  // 도시 선택 버튼\r\n  const [locationBtn, setLocationBtn] = useState(\"\");\r\n  // 세부 지역 선택 버튼\r\n  const [cityBtn, setCityBtn] = useState(\"\");\r\n\r\n  //입력한 지역 저장 -> [리스트 보기]에 표시할 예정\r\n  const dispatch = useDispatch();\r\n  const inputLocation = useCallback(\r\n    (locationBtn, cityBtn) => dispatch(saveLocation(locationBtn, cityBtn)),\r\n    [dispatch]\r\n  );\r\n  useEffect(() => {\r\n    inputLocation(locationBtn, cityBtn);\r\n  }, [cityBtn]);\r\n\r\n  //지역 입력이 완료되면 리스트 보기 페이지로 이동\r\n  const [showListBool, setShowListBool] = useState(false);\r\n  useEffect(() => {\r\n    if (showListBool === false) return;\r\n    else props.showList();\r\n  }, [showListBool]);\r\n\r\n  const locationList = dummy.locations.map((location) => (\r\n    <Region\r\n      key={location.id}\r\n      id={location.id}\r\n      onClick={() => {\r\n        setLocationBtn(location.search);\r\n      }}\r\n      selected={locationBtn === location.search && \"selected\"}\r\n      name={location.name}\r\n    ></Region>\r\n  ));\r\n\r\n  const searchCityList = dummy.citys.filter(\r\n    (city) => city.location === locationBtn\r\n  );\r\n  const cityList = searchCityList.map((city) => (\r\n    <Region\r\n      key={city.id}\r\n      id={city.id}\r\n      onClick={() => {\r\n        setCityBtn(city.name);\r\n        setShowListBool(true);\r\n      }}\r\n      selected={cityBtn === city.name && \"selected\"}\r\n      name={city.name}\r\n    ></Region>\r\n  ));\r\n\r\n  return (\r\n    <RegionSelectWrap>\r\n      <CloseWrap>\r\n        <Close onClick={props.closeRegion}>\r\n          <ImgComponent src={\"close.png\"} width={\"100%\"} />\r\n        </Close>\r\n      </CloseWrap>\r\n      <Box>\r\n        <ListWrap>\r\n          <FlexWrap>{locationList}</FlexWrap>\r\n          <Divider />\r\n          <FlexWrap>{locationBtn === \"\" ? <></> : cityList}</FlexWrap>\r\n        </ListWrap>\r\n      </Box>\r\n    </RegionSelectWrap>\r\n  );\r\n};\r\n\r\nconst RegionSelectWrap = styled.div`\r\n  width: 100%;\r\n  height: 80%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  z-index: 20;\r\n  border-top: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  padding: 40px 22px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  @media screen and (max-width: 1000px) {\r\n    padding-top: 20px;\r\n  }\r\n`\r\nconst CloseWrap = styled.div`\r\n  &::after {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n`\r\nconst Close = styled.div`\r\n  width: 17px;\r\n  height: 17px;\r\n  float: right;\r\n  padding-right: 10px;\r\n  margin-right: 1%;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 1000px) {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin-right: 0;\r\n    padding-right: 0;\r\n  }\r\n`\r\nconst Box = styled.div`\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  height: 100%;\r\n  padding-bottom: 50px;\r\n  box-sizing: border-box;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n// 리스트\r\nconst ListWrap = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin: auto;\r\n`\r\nconst FlexWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: auto;\r\n`\r\nconst Divider = styled.hr`\r\n  border: 0;\r\n  margin-bottom: 40px;\r\n  margin-top: 40px;\r\n  height: 0.5px;\r\n  background-color: #c09567;\r\n`\r\n\r\n// 지역 버튼\r\nconst Region = ({ onClick, selected, name }) => {\r\n  return (\r\n    <RegionBtn selected={selected} onClick={onClick}>\r\n      {name}\r\n    </RegionBtn>\r\n  );\r\n};\r\n\r\nconst RegionBtn = styled.div`\r\n  border: 1px solid #000000;\r\n  border-radius: 10px;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  color: ${(props) => (props.selected ? \"##fff\" : \"#000\")};\r\n  margin: 1%;\r\n  box-sizing: border-box;\r\n  width: 12%;\r\n  background-color: ${(props) => (props.selected ? \"#C09567\" : \"#fff\")};\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 12px;\r\n    padding-top: 4px;\r\n    padding-bottom: 4px;\r\n    border-radius: 4px;\r\n    width: 18%;\r\n  }\r\n`\r\n\r\nexport default RegionListModal;\r\n","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\ReviewScope.jsx",["142"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ReviewScope = ({ scope }) => {\r\n  const AVR_RATE = scope * 20;\r\n  const [ratesResArr, setRatesResArr] = useState([0, 0, 0, 0, 0]);\r\n  const calcStarRates = () => {\r\n    let tempStarRatesArr = [0, 0, 0, 0, 0];\r\n    let starVerScore = (AVR_RATE * 70) / 100;\r\n    let idx = 0;\r\n    while (starVerScore > 14) {\r\n      tempStarRatesArr[idx] = 14;\r\n      idx += 1;\r\n      starVerScore -= 14;\r\n    }\r\n    tempStarRatesArr[idx] = starVerScore;\r\n    return tempStarRatesArr;\r\n  };\r\n  useEffect(() => {\r\n    setRatesResArr(calcStarRates);\r\n  }, []);\r\n\r\n  const starList = ratesResArr.map((item, idx) => (\r\n    <span className=\"star_icon\" key={idx}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"18\"\r\n        height=\"39\"\r\n        viewBox=\"0 0 14 13\"\r\n        fill=\"#cacaca\"\r\n      >\r\n        <clipPath id={`${item}StarClip`}>\r\n          <rect width={`${ratesResArr[idx]}`} height=\"39\" />\r\n        </clipPath>\r\n        <path\r\n          id={`${item}Star`}\r\n          d=\"M9,2l2.163,4.279L16,6.969,12.5,10.3l.826,4.7L9,12.779,4.674,15,5.5,10.3,2,6.969l4.837-.69Z\"\r\n          transform=\"translate(-2 -2)\"\r\n        />\r\n        <use\r\n          clipPath={`url(#${item}StarClip)`}\r\n          href={`#${item}Star`}\r\n          fill=\"#f6ed74\"\r\n        />\r\n      </svg>\r\n    </span>\r\n  ));\r\n\r\n  return <StarRateWrap>{starList}</StarRateWrap>;\r\n};\r\n\r\nexport default ReviewScope;\r\n\r\nconst StarRateWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  .star_icon {\r\n    display: inline-flex;\r\n    margin-right: 5px;\r\n  }\r\n`\r\n","C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\RestaurantModalAPI.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\ListRandom.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\Review.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\components\\map\\CreateMap.jsx",["143","144","145","146","147","148","149","150","151","152"],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\MapRamdom.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\CenterRestaurant.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\api\\SearchRestaurantAPI.js",[],[],"C:\\Users\\rainn\\Desktop\\ReviewBoard\\front-end\\src\\modules\\urlChange.js",[],[],{"ruleId":"153","severity":1,"message":"154","line":109,"column":6,"nodeType":"155","endLine":109,"endColumn":19,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"154","line":69,"column":6,"nodeType":"155","endLine":69,"endColumn":19,"suggestions":"157"},{"ruleId":"153","severity":1,"message":"158","line":86,"column":6,"nodeType":"155","endLine":86,"endColumn":24,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":93,"column":23,"nodeType":"162","messageId":"163","endLine":93,"endColumn":37},{"ruleId":"160","severity":1,"message":"164","line":96,"column":25,"nodeType":"162","messageId":"163","endLine":96,"endColumn":41},{"ruleId":"153","severity":1,"message":"158","line":114,"column":6,"nodeType":"155","endLine":114,"endColumn":39,"suggestions":"165"},{"ruleId":"153","severity":1,"message":"154","line":292,"column":6,"nodeType":"155","endLine":292,"endColumn":19,"suggestions":"166"},{"ruleId":"153","severity":1,"message":"167","line":26,"column":6,"nodeType":"155","endLine":26,"endColumn":15,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":33,"column":6,"nodeType":"155","endLine":33,"endColumn":20,"suggestions":"170"},{"ruleId":"153","severity":1,"message":"171","line":21,"column":6,"nodeType":"155","endLine":21,"endColumn":8,"suggestions":"172"},{"ruleId":"160","severity":1,"message":"173","line":54,"column":13,"nodeType":"162","messageId":"163","endLine":54,"endColumn":16},{"ruleId":"153","severity":1,"message":"174","line":111,"column":6,"nodeType":"155","endLine":111,"endColumn":18,"suggestions":"175"},{"ruleId":"160","severity":1,"message":"176","line":117,"column":11,"nodeType":"162","messageId":"163","endLine":117,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":117,"column":56,"nodeType":"179","messageId":"180","endLine":117,"endColumn":58},{"ruleId":"153","severity":1,"message":"181","line":192,"column":6,"nodeType":"155","endLine":192,"endColumn":12,"suggestions":"182"},{"ruleId":"153","severity":1,"message":"183","line":241,"column":6,"nodeType":"155","endLine":241,"endColumn":27,"suggestions":"184"},{"ruleId":"160","severity":1,"message":"185","line":255,"column":11,"nodeType":"162","messageId":"163","endLine":255,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":255,"column":62,"nodeType":"179","messageId":"180","endLine":255,"endColumn":64},{"ruleId":"153","severity":1,"message":"186","line":330,"column":6,"nodeType":"155","endLine":330,"endColumn":24,"suggestions":"187"},{"ruleId":"153","severity":1,"message":"188","line":347,"column":6,"nodeType":"155","endLine":347,"endColumn":40,"suggestions":"189"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageNum'. Either include it or remove the dependency array. You can also do a functional update 'setPageNum(p => ...)' if you only need 'pageNum' in the 'setPageNum' call.","ArrayExpression",["190"],["191"],"React Hook useEffect has a missing dependency: 'bigLocation'. Either include it or remove the dependency array.",["192"],"no-unused-vars","'setBigLocation' is assigned a value but never used.","Identifier","unusedVar","'setSmallLocation' is assigned a value but never used.",["193"],["194"],"React Hook useEffect has missing dependencies: 'inputLocation' and 'locationBtn'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["196"],"React Hook useEffect has a missing dependency: 'calcStarRates'. Either include it or remove the dependency array.",["197"],"'map' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentXY', 'size', 'x', and 'y'. Either include them or remove the dependency array.",["198"],"'showRestaurant' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'randomData'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: '_map'. Either include it or remove the dependency array.",["200"],"'showCenterRestaurant' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_map' and 'markers'. Either include them or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'ChangeSize' and 'resetXY'. Either include them or remove the dependency array.",["202"],{"desc":"203","fix":"204"},{"desc":"203","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"203","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},"Update the dependencies array to be: [ref, inView, pageNum]",{"range":"227","text":"228"},{"range":"229","text":"228"},"Update the dependencies array to be: [bigLocation, pageNum, showURL]",{"range":"230","text":"231"},"Update the dependencies array to be: [smallLocation, pageNum, showURL, bigLocation]",{"range":"232","text":"233"},{"range":"234","text":"228"},"Update the dependencies array to be: [cityBtn, inputLocation, locationBtn]",{"range":"235","text":"236"},"Update the dependencies array to be: [props, showListBool]",{"range":"237","text":"238"},"Update the dependencies array to be: [calcStarRates]",{"range":"239","text":"240"},"Update the dependencies array to be: [currentXY, randomData, size, x, y]",{"range":"241","text":"242"},"Update the dependencies array to be: [_map, randomData]",{"range":"243","text":"244"},"Update the dependencies array to be: [x, y, size, showURL, _map]",{"range":"245","text":"246"},"Update the dependencies array to be: [_map, centerData, markers, size]",{"range":"247","text":"248"},"Update the dependencies array to be: [bigLocation, smallLocation, _map, resetXY, ChangeSize]",{"range":"249","text":"250"},[2491,2504],"[ref, inView, pageNum]",[1760,1773],[2138,2156],"[bigLocation, pageNum, showURL]",[2894,2927],"[smallLocation, pageNum, showURL, bigLocation]",[6658,6671],[832,841],"[cityBtn, inputLocation, locationBtn]",[1034,1048],"[props, showListBool]",[637,639],"[calcStarRates]",[3947,3959],"[currentXY, randomData, size, x, y]",[7013,7019],"[_map, randomData]",[8249,8270],"[x, y, size, showURL, _map]",[11215,11233],"[_map, centerData, markers, size]",[11838,11872],"[bigLocation, smallLocation, _map, resetXY, ChangeSize]"]
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rainn\\\\Desktop\\\\ReviewBoard\\\\front-end\\\\src\\\\components\\\\RegionListModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport dummy from \"./../db/location.json\";\nimport styled from \"styled-components\";\nimport ImgComponent from \"./ImageComponent\";\nimport { useDispatch } from \"react-redux\";\nimport { saveLocation } from \"../modules/location\";\n\n// =========== RegionListModal 지역 선택 모달\n//수정-보민 : map, json DB, Redux (setCity)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegionListModal = props => {\n  _s();\n  // 도시 선택 버튼\n  const [locationBtn, setLocationBtn] = useState(\"\");\n  // 세부 지역 선택 버튼\n  const [cityBtn, setCityBtn] = useState(\"\");\n\n  //입력한 지역 저장 -> [리스트 보기]에 표시할 예정\n  const dispatch = useDispatch();\n  const inputLocation = useCallback((locationBtn, cityBtn) => dispatch(saveLocation(locationBtn, cityBtn)), [dispatch]);\n  useEffect(() => {\n    inputLocation(locationBtn, cityBtn);\n  }, [cityBtn]);\n\n  //지역 입력이 완료되면 리스트 보기 페이지로 이동\n  const [showListBool, setShowListBool] = useState(false);\n  useEffect(() => {\n    if (showListBool === false) return;else props.showList();\n  }, [showListBool]);\n  const locationList = dummy.locations.map(location => /*#__PURE__*/_jsxDEV(Region, {\n    id: location.id,\n    onClick: () => {\n      setLocationBtn(location.search);\n    },\n    selected: locationBtn === location.search && \"selected\",\n    name: location.name\n  }, location.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  const searchCityList = dummy.citys.filter(city => city.location === locationBtn);\n  const cityList = searchCityList.map(city => /*#__PURE__*/_jsxDEV(Region, {\n    id: city.id,\n    onClick: () => {\n      setCityBtn(city.name);\n      setShowListBool(true);\n    },\n    selected: cityBtn === city.name && \"selected\",\n    name: city.name\n  }, city.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(RegionSelectWrap, {\n    children: [/*#__PURE__*/_jsxDEV(CloseWrap, {\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        onClick: props.closeRegion,\n        children: /*#__PURE__*/_jsxDEV(ImgComponent, {\n          src: \"close.png\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ListWrap, {\n        children: [/*#__PURE__*/_jsxDEV(FlexWrap, {\n          children: locationList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FlexWrap, {\n          children: locationBtn === \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : cityList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionListModal, \"JhGaugLJTtOn5X8swkZt/aL2bWA=\", false, function () {\n  return [useDispatch];\n});\n_c = RegionListModal;\nconst RegionSelectWrap = styled.div`\n  width: 100%;\n  height: 80%;\n  position: absolute;\n  bottom: 0;\n  z-index: 20;\n  border-top: 1px solid #c09567;\n  border-radius: 10px;\n  padding: 40px 22px;\n  box-sizing: border-box;\n  background-color: #fff;\n  @media screen and (max-width: 1000px) {\n    padding-top: 20px;\n  }\n`;\n_c2 = RegionSelectWrap;\nconst CloseWrap = styled.div`\n  &::after {\n    display: block;\n    content: \"\";\n    line-height: 0;\n    clear: both;\n  }\n  &::before {\n    display: block;\n    content: \"\";\n    line-height: 0;\n    clear: both;\n  }\n`;\n_c3 = CloseWrap;\nconst Close = styled.div`\n  width: 17px;\n  height: 17px;\n  float: right;\n  padding-right: 10px;\n  margin-right: 1%;\n  margin-bottom: 20px;\n  @media screen and (max-width: 1000px) {\n    width: 12px;\n    height: 12px;\n    margin-right: 0;\n    padding-right: 0;\n  }\n`;\n_c4 = Close;\nconst Box = styled.div`\n  overflow: scroll;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  height: 100%;\n  padding-bottom: 50px;\n  box-sizing: border-box;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n// 리스트\n_c5 = Box;\nconst ListWrap = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  margin: auto;\n`;\n_c6 = ListWrap;\nconst FlexWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: auto;\n`;\n_c7 = FlexWrap;\nconst Divider = styled.hr`\n  border: 0;\n  margin-bottom: 40px;\n  margin-top: 40px;\n  height: 0.5px;\n  background-color: #c09567;\n`;\n\n// 지역 버튼\n_c8 = Divider;\nconst Region = _ref => {\n  let {\n    onClick,\n    selected,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(RegionBtn, {\n    selected: selected,\n    onClick: onClick,\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_c9 = Region;\nconst RegionBtn = styled.div`\n  border: 1px solid #000000;\n  border-radius: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  font-weight: 400;\n  font-size: 14px;\n  text-align: center;\n  color: ${props => props.selected ? \"##fff\" : \"#000\"};\n  margin: 1%;\n  box-sizing: border-box;\n  width: 12%;\n  background-color: ${props => props.selected ? \"#C09567\" : \"#fff\"};\n  @media screen and (max-width: 1000px) {\n    font-size: 12px;\n    padding-top: 4px;\n    padding-bottom: 4px;\n    border-radius: 4px;\n    width: 18%;\n  }\n`;\n_c10 = RegionBtn;\nexport default RegionListModal;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"RegionListModal\");\n$RefreshReg$(_c2, \"RegionSelectWrap\");\n$RefreshReg$(_c3, \"CloseWrap\");\n$RefreshReg$(_c4, \"Close\");\n$RefreshReg$(_c5, \"Box\");\n$RefreshReg$(_c6, \"ListWrap\");\n$RefreshReg$(_c7, \"FlexWrap\");\n$RefreshReg$(_c8, \"Divider\");\n$RefreshReg$(_c9, \"Region\");\n$RefreshReg$(_c10, \"RegionBtn\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","dummy","styled","ImgComponent","useDispatch","saveLocation","RegionListModal","props","locationBtn","setLocationBtn","cityBtn","setCityBtn","dispatch","inputLocation","showListBool","setShowListBool","showList","locationList","locations","map","location","id","search","name","searchCityList","citys","filter","city","cityList","closeRegion","RegionSelectWrap","div","CloseWrap","Close","Box","ListWrap","FlexWrap","Divider","hr","Region","onClick","selected","RegionBtn"],"sources":["C:/Users/rainn/Desktop/ReviewBoard/front-end/src/components/RegionListModal.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport dummy from \"./../db/location.json\";\r\nimport styled from \"styled-components\";\r\nimport ImgComponent from \"./ImageComponent\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveLocation } from \"../modules/location\";\r\n\r\n// =========== RegionListModal 지역 선택 모달\r\n//수정-보민 : map, json DB, Redux (setCity)\r\n\r\nconst RegionListModal = (props) => {\r\n  // 도시 선택 버튼\r\n  const [locationBtn, setLocationBtn] = useState(\"\");\r\n  // 세부 지역 선택 버튼\r\n  const [cityBtn, setCityBtn] = useState(\"\");\r\n\r\n  //입력한 지역 저장 -> [리스트 보기]에 표시할 예정\r\n  const dispatch = useDispatch();\r\n  const inputLocation = useCallback(\r\n    (locationBtn, cityBtn) => dispatch(saveLocation(locationBtn, cityBtn)),\r\n    [dispatch]\r\n  );\r\n  useEffect(() => {\r\n    inputLocation(locationBtn, cityBtn);\r\n  }, [cityBtn]);\r\n\r\n  //지역 입력이 완료되면 리스트 보기 페이지로 이동\r\n  const [showListBool, setShowListBool] = useState(false);\r\n  useEffect(() => {\r\n    if (showListBool === false) return;\r\n    else props.showList();\r\n  }, [showListBool]);\r\n\r\n  const locationList = dummy.locations.map((location) => (\r\n    <Region\r\n      key={location.id}\r\n      id={location.id}\r\n      onClick={() => {\r\n        setLocationBtn(location.search);\r\n      }}\r\n      selected={locationBtn === location.search && \"selected\"}\r\n      name={location.name}\r\n    ></Region>\r\n  ));\r\n\r\n  const searchCityList = dummy.citys.filter(\r\n    (city) => city.location === locationBtn\r\n  );\r\n  const cityList = searchCityList.map((city) => (\r\n    <Region\r\n      key={city.id}\r\n      id={city.id}\r\n      onClick={() => {\r\n        setCityBtn(city.name);\r\n        setShowListBool(true);\r\n      }}\r\n      selected={cityBtn === city.name && \"selected\"}\r\n      name={city.name}\r\n    ></Region>\r\n  ));\r\n\r\n  return (\r\n    <RegionSelectWrap>\r\n      <CloseWrap>\r\n        <Close onClick={props.closeRegion}>\r\n          <ImgComponent src={\"close.png\"} width={\"100%\"} />\r\n        </Close>\r\n      </CloseWrap>\r\n      <Box>\r\n        <ListWrap>\r\n          <FlexWrap>{locationList}</FlexWrap>\r\n          <Divider />\r\n          <FlexWrap>{locationBtn === \"\" ? <></> : cityList}</FlexWrap>\r\n        </ListWrap>\r\n      </Box>\r\n    </RegionSelectWrap>\r\n  );\r\n};\r\n\r\nconst RegionSelectWrap = styled.div`\r\n  width: 100%;\r\n  height: 80%;\r\n  position: absolute;\r\n  bottom: 0;\r\n  z-index: 20;\r\n  border-top: 1px solid #c09567;\r\n  border-radius: 10px;\r\n  padding: 40px 22px;\r\n  box-sizing: border-box;\r\n  background-color: #fff;\r\n  @media screen and (max-width: 1000px) {\r\n    padding-top: 20px;\r\n  }\r\n`\r\nconst CloseWrap = styled.div`\r\n  &::after {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n  &::before {\r\n    display: block;\r\n    content: \"\";\r\n    line-height: 0;\r\n    clear: both;\r\n  }\r\n`\r\nconst Close = styled.div`\r\n  width: 17px;\r\n  height: 17px;\r\n  float: right;\r\n  padding-right: 10px;\r\n  margin-right: 1%;\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 1000px) {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin-right: 0;\r\n    padding-right: 0;\r\n  }\r\n`\r\nconst Box = styled.div`\r\n  overflow: scroll;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  height: 100%;\r\n  padding-bottom: 50px;\r\n  box-sizing: border-box;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n// 리스트\r\nconst ListWrap = styled.div`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin: auto;\r\n`\r\nconst FlexWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: auto;\r\n`\r\nconst Divider = styled.hr`\r\n  border: 0;\r\n  margin-bottom: 40px;\r\n  margin-top: 40px;\r\n  height: 0.5px;\r\n  background-color: #c09567;\r\n`\r\n\r\n// 지역 버튼\r\nconst Region = ({ onClick, selected, name }) => {\r\n  return (\r\n    <RegionBtn selected={selected} onClick={onClick}>\r\n      {name}\r\n    </RegionBtn>\r\n  );\r\n};\r\n\r\nconst RegionBtn = styled.div`\r\n  border: 1px solid #000000;\r\n  border-radius: 10px;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  text-align: center;\r\n  color: ${(props) => (props.selected ? \"##fff\" : \"#000\")};\r\n  margin: 1%;\r\n  box-sizing: border-box;\r\n  width: 12%;\r\n  background-color: ${(props) => (props.selected ? \"#C09567\" : \"#fff\")};\r\n  @media screen and (max-width: 1000px) {\r\n    font-size: 12px;\r\n    padding-top: 4px;\r\n    padding-bottom: 4px;\r\n    border-radius: 4px;\r\n    width: 18%;\r\n  }\r\n`\r\n\r\nexport default RegionListModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
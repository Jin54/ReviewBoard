{"ast":null,"code":"const INCREASE = \"map/INCREASE\";\nconst DECREASE = \"map/DECREASE\";\nconst CURRENTUP = \"map/CURRENTUP\";\nconst RESETXY = \"map/RESETXY\";\nconst MARKERS = \"map/MARKERS\";\nconst CHANGESIZE = \"map/CHANGESIZE\";\nconst CURRENTXY = \"map/CURRENTXY\";\nexport const increase = () => ({\n  type: INCREASE\n});\nexport const decrease = () => ({\n  type: DECREASE\n});\nexport const currentUp = () => ({\n  type: CURRENTUP\n});\nexport const resetxy = (x, y) => ({\n  type: RESETXY,\n  x: x,\n  y: y\n});\nexport const markers = data => ({\n  type: MARKERS,\n  data: data\n});\nexport const changeSize = size => ({\n  type: CHANGESIZE,\n  number: size\n});\nexport const currentxy = (x, y) => ({\n  type: CURRENTXY,\n  currentX: x,\n  currentY: y\n});\nconst initialState = {\n  number: 12,\n  x: 36.5,\n  y: 128,\n  data: [],\n  currentX: 0,\n  currentY: 0\n};\nfunction map() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case INCREASE:\n      return {\n        ...state,\n        number: state.number + 2\n      };\n    case DECREASE:\n      return {\n        ...state,\n        number: state.number - 2\n      };\n    case CURRENTUP:\n      return {\n        ...state,\n        number: 3\n      };\n    case RESETXY:\n      return {\n        ...state,\n        x: action.x,\n        y: action.y\n      };\n    case MARKERS:\n      return {\n        ...state,\n        data: action.data\n      };\n    case CHANGESIZE:\n      return {\n        ...state,\n        number: action.number\n      };\n    case CURRENTXY:\n      return {\n        ...state,\n        currentX: action.currentX,\n        currentY: action.currentY\n      };\n    default:\n      return state;\n  }\n}\nexport default map;","map":{"version":3,"names":["INCREASE","DECREASE","CURRENTUP","RESETXY","MARKERS","CHANGESIZE","CURRENTXY","increase","type","decrease","currentUp","resetxy","x","y","markers","data","changeSize","size","number","currentxy","currentX","currentY","initialState","map","state","action"],"sources":["C:/Users/rainn/Desktop/ReviewBoard/front-end/src/modules/map.js"],"sourcesContent":["const INCREASE = \"map/INCREASE\";\r\nconst DECREASE = \"map/DECREASE\";\r\nconst CURRENTUP = \"map/CURRENTUP\";\r\nconst RESETXY = \"map/RESETXY\";\r\nconst MARKERS = \"map/MARKERS\";\r\nconst CHANGESIZE = \"map/CHANGESIZE\";\r\nconst CURRENTXY = \"map/CURRENTXY\";\r\n\r\nexport const increase = () => ({ type: INCREASE });\r\nexport const decrease = () => ({ type: DECREASE });\r\nexport const currentUp = () => ({ type: CURRENTUP });\r\nexport const resetxy = (x, y) => ({\r\n  type: RESETXY,\r\n  x: x,\r\n  y: y,\r\n});\r\nexport const markers = (data) => ({\r\n  type: MARKERS,\r\n  data: data,\r\n});\r\nexport const changeSize = (size) => ({\r\n  type: CHANGESIZE,\r\n  number: size,\r\n});\r\nexport const currentxy = (x, y) => ({\r\n  type: CURRENTXY,\r\n  currentX: x,\r\n  currentY: y,\r\n});\r\n\r\nconst initialState = {\r\n  number: 12,\r\n  x: 36.5,\r\n  y: 128,\r\n  data: [],\r\n  currentX: 0,\r\n  currentY: 0,\r\n};\r\n\r\nfunction map(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INCREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number + 2,\r\n      };\r\n    case DECREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number - 2,\r\n      };\r\n    case CURRENTUP:\r\n      return {\r\n        ...state,\r\n        number: 3,\r\n      };\r\n    case RESETXY:\r\n      return {\r\n        ...state,\r\n        x: action.x,\r\n        y: action.y,\r\n      };\r\n    case MARKERS:\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n      };\r\n    case CHANGESIZE:\r\n      return {\r\n        ...state,\r\n        number: action.number,\r\n      };\r\n    case CURRENTXY:\r\n      return {\r\n        ...state,\r\n        currentX: action.currentX,\r\n        currentY: action.currentY,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default map;\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,cAAc;AAC/B,MAAMC,QAAQ,GAAG,cAAc;AAC/B,MAAMC,SAAS,GAAG,eAAe;AACjC,MAAMC,OAAO,GAAG,aAAa;AAC7B,MAAMC,OAAO,GAAG,aAAa;AAC7B,MAAMC,UAAU,GAAG,gBAAgB;AACnC,MAAMC,SAAS,GAAG,eAAe;AAEjC,OAAO,MAAMC,QAAQ,GAAG,OAAO;EAAEC,IAAI,EAAER;AAAS,CAAC,CAAC;AAClD,OAAO,MAAMS,QAAQ,GAAG,OAAO;EAAED,IAAI,EAAEP;AAAS,CAAC,CAAC;AAClD,OAAO,MAAMS,SAAS,GAAG,OAAO;EAAEF,IAAI,EAAEN;AAAU,CAAC,CAAC;AACpD,OAAO,MAAMS,OAAO,GAAG,CAACC,CAAC,EAAEC,CAAC,MAAM;EAChCL,IAAI,EAAEL,OAAO;EACbS,CAAC,EAAEA,CAAC;EACJC,CAAC,EAAEA;AACL,CAAC,CAAC;AACF,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCP,IAAI,EAAEJ,OAAO;EACbW,IAAI,EAAEA;AACR,CAAC,CAAC;AACF,OAAO,MAAMC,UAAU,GAAIC,IAAI,KAAM;EACnCT,IAAI,EAAEH,UAAU;EAChBa,MAAM,EAAED;AACV,CAAC,CAAC;AACF,OAAO,MAAME,SAAS,GAAG,CAACP,CAAC,EAAEC,CAAC,MAAM;EAClCL,IAAI,EAAEF,SAAS;EACfc,QAAQ,EAAER,CAAC;EACXS,QAAQ,EAAER;AACZ,CAAC,CAAC;AAEF,MAAMS,YAAY,GAAG;EACnBJ,MAAM,EAAE,EAAE;EACVN,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,GAAG;EACNE,IAAI,EAAE,EAAE;EACRK,QAAQ,EAAE,CAAC;EACXC,QAAQ,EAAE;AACZ,CAAC;AAED,SAASE,GAAG,GAA+B;EAAA,IAA9BC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EACvC,QAAQA,MAAM,CAACjB,IAAI;IACjB,KAAKR,QAAQ;MACX,OAAO;QACL,GAAGwB,KAAK;QACRN,MAAM,EAAEM,KAAK,CAACN,MAAM,GAAG;MACzB,CAAC;IACH,KAAKjB,QAAQ;MACX,OAAO;QACL,GAAGuB,KAAK;QACRN,MAAM,EAAEM,KAAK,CAACN,MAAM,GAAG;MACzB,CAAC;IACH,KAAKhB,SAAS;MACZ,OAAO;QACL,GAAGsB,KAAK;QACRN,MAAM,EAAE;MACV,CAAC;IACH,KAAKf,OAAO;MACV,OAAO;QACL,GAAGqB,KAAK;QACRZ,CAAC,EAAEa,MAAM,CAACb,CAAC;QACXC,CAAC,EAAEY,MAAM,CAACZ;MACZ,CAAC;IACH,KAAKT,OAAO;MACV,OAAO;QACL,GAAGoB,KAAK;QACRT,IAAI,EAAEU,MAAM,CAACV;MACf,CAAC;IACH,KAAKV,UAAU;MACb,OAAO;QACL,GAAGmB,KAAK;QACRN,MAAM,EAAEO,MAAM,CAACP;MACjB,CAAC;IACH,KAAKZ,SAAS;MACZ,OAAO;QACL,GAAGkB,KAAK;QACRJ,QAAQ,EAAEK,MAAM,CAACL,QAAQ;QACzBC,QAAQ,EAAEI,MAAM,CAACJ;MACnB,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEnB;AAEA,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}